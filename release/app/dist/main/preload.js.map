{"version":3,"file":"preload.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,QAAQ,I,mBCRX,IAAIC,EAAsB,CCA1BA,EAAyBP,IACH,oBAAXQ,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeX,EAASQ,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeX,EAAS,aAAc,CAAEY,OAAO,GAAO,G,YCuB9D,MAAMC,EAAgBC,aAChBC,EAAkBC,e,OACxBC,QAAQC,KAAK,UAAU,KACrBZ,OAAOQ,aAAeD,EACtBP,OAAOU,eAAiBD,CAAe,I","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./src/main/preload.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Disable no-unused-vars, broken for spread args\n/* eslint no-unused-vars: off */\nimport { contextBridge, ipcRenderer, IpcRendererEvent } from 'electron';\n\nexport type Channels = 'ipc-example';\n\n// const electronHandler = {\n//   ipcRenderer: {\n//     sendMessage(channel: Channels, ...args: unknown[]) {\n//       ipcRenderer.send(channel, ...args);\n//     },\n//     on(channel: Channels, func: (...args: unknown[]) => void) {\n//       const subscription = (_event: IpcRendererEvent, ...args: unknown[]) =>\n//         func(...args);\n//       ipcRenderer.on(channel, subscription);\n//\n//       return () => {\n//         ipcRenderer.removeListener(channel, subscription);\n//       };\n//     },\n//     once(channel: Channels, func: (...args: unknown[]) => void) {\n//       ipcRenderer.once(channel, (_event, ...args) => func(...args));\n//     },\n//   },\n// };\n\n// contextBridge.exposeInMainWorld('electron', electronHandler);\n\nconst _setImmediate = setImmediate;\nconst _clearImmediate = clearImmediate;\nprocess.once('loaded', () => {\n  global.setImmediate = _setImmediate;\n  global.clearImmediate = _clearImmediate;\n});\n\n// export type ElectronHandler = typeof electronHandler;\n"],"names":["root","factory","exports","module","define","amd","a","i","global","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","_setImmediate","setImmediate","_clearImmediate","clearImmediate","process","once"],"sourceRoot":""}